import{EditorView as e,EditorState as t,basicSetup as n}from"@codemirror/basic-setup";import{ViewPlugin as o}from"@codemirror/view";import{LRLanguage as r,LanguageSupport as s,syntaxTree as i}from"@codemirror/language";import{xml as a}from"@codemirror/lang-xml";import{p as d,s as c}from"./index-e462de8c.js";import{styleTags as l,tags as m}from"@lezer/highlight";import"@lezer/lr";const p=r.define({parser:d.configure({props:[l({Number:m.number,"LineBreak LineBreakWrapped":m.contentSeparator,"Illegible GapUnknown Gap SuppliedLost Supplied Unclear":m.comment,"Div Recto Verso Part Fragment":m.keyword,"( )":m.paren})]}),languageData:{closeBrackets:{brackets:["(","[","{","<"]}}});function h(){return new s(p)}class u{getConfig(t){const r=this,s=o.fromClass(class{update(e){if(e.docChanged){const n=i(e.state),o=e.state.doc.toJSON(),s=r.onUpdate(n,o.join("\n"));t.dispatchEvent(new CustomEvent("update",{detail:s,composed:!0,bubbles:!0}))}}});return{extensions:[n,e.lineWrapping,...this.getExtensions(),s]}}onUpdate(e,t){return t}}class g extends u{getExtensions(){return[a()]}}class f extends u{getExtensions(){return[h()]}onUpdate(e,t){return c(e,t)}}class w extends HTMLElement{constructor(){var e;super(),this.attachShadow({mode:"open"});const t=document.createElement("style");t.innerHTML=this.styles(),null===(e=this.shadowRoot)||void 0===e||e.appendChild(t)}connectedCallback(){var n;this.mode=this.getAttribute("mode")||"xml",console.log(`<jinn-codemirror> mode: ${this.mode}`);const o=this.innerHTML;let r;if("leiden"===this.mode)r=new f;else r=new g;const s=document.createElement("div");null===(n=this.shadowRoot)||void 0===n||n.appendChild(s),this._editor=new e({state:t.create(r.getConfig(this)),parent:s}),this.content=o}set content(e){this._editor?this._editor.dispatch({changes:{from:0,to:this._editor.state.doc.length,insert:e}}):console.log("no editor")}styles(){return"\n            > div, .cm-editor {\n                height: 100%;\n                width: 100%;\n            }\n        "}}window.customElements.define("jinn-codemirror",w);export{w as JinnCodemirror};
