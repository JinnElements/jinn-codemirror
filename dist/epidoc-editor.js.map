{
  "version": 3,
  "sources": ["../src/epidoc-editor.ts"],
  "sourcesContent": ["import { JinnCodemirror } from \"./jinn-codemirror\";\n\ninterface LeidenEditorUpdateEvent extends Event {\n    detail: { content: string } \n}\n\nconst style = `\n    :host{\n        display: block;\n        width: 100%;\n    }\n    jinn-codemirror {\n        font-size: 1rem;\n        display:block;\n        width:100%;\n    }\n    jinn-codemirror[valid=\"true\"] {\n        outline: thin solid green;\n    }\n    jinn-codemirror[valid=\"false\"] {\n        outline: thin solid red;\n    }\n    #leiden-editor {\n        margin-bottom:0.5rem;\n    }\n    .hidden {\n        display: none;\n    }\n    [slot=toolbar] {\n        display: block;\n        width: 100%;\n        margin-bottom: 0.75rem;\n    }\n    [slot=toolbar] * {\n        font-size: .85rem;\n        border: 1px solid transparent;\n        background-color: inherit;\n    }\n    [slot=toolbar] *:hover {\n        border: 1px solid orange;\n    }`;\n\n\nexport class JinnEpidocEditor extends HTMLElement {\n    \n    _wrapper?: Element | null;\n\n    xmlEditor: JinnCodemirror | null | undefined;\n    // leidenEditor: JinnCodemirror | null | undefined;\n    // toggle: HTMLButtonElement | null | undefined;\n\n    public valid?: boolean;\n    private schema: string | null;\n\n    /**\n     * The value edited in the editor as either an Element or string -\n     * depending on the mode set.\n     */\n    set value(value: Element | string | null | undefined) {\n        if (this._wrapper === value) {\n            console.debug(\"value unchanged\");\n            return;\n        }\n        if (!value) {\n            this._wrapper = null\n        }\n        if (!(value instanceof Element)) { \n            throw new Error(\"Value is not a node\")\n        }\n    \n        this._wrapper = value;\n        const node = value.firstElementChild\n        if (!this.xmlEditor) {\n            throw new Error(\"XML editor not initialized\")\n        }\n        this.xmlEditor.value = node\n    }\n    \n    get value(): Element | null | undefined {\n        return this._wrapper;\n    }\n    \n    constructor() {\n        super()\n        this._wrapper = null;\n        this.xmlEditor = null;\n        this.valid = true;\n        this.schema = null;\n        this.attachShadow({ mode: 'open' });\n    }\n    connectedCallback() {\n        this.schema = this.getAttribute('schema');\n        this.shadowRoot.innerHTML = `\n            <style>\n                ${style}\n            </style>\n            <jinn-codemirror id=\"leiden-editor\" class=\"leiden hidden\">\n                <div slot=\"toolbar\">\n                    <select name=\"modes\">\n                        <option value=\"edcs\" selected>EDCS/EDH</option>\n                        <option value=\"default\">Petrae</option>\n                        <option value=\"leiden_plus\">Leiden+</option>\n                    </select>\n                    <button data-command=\"expan\" class=\"leiden_plus\">(a(bcd))</button>\n                    <button data-command=\"erasure\" class=\"leiden_plus\">\u301Aabc\u301B</button>\n                    <button data-command=\"unclear\" class=\"leiden_plus\">a\u0323</button>\n                    <button data-command=\"div\" class=\"leiden_plus\">&lt;=...</button>\n                    <!--button data-command=\"fragment\" class=\"leiden_plus\">&lt;D=.1.fragment...</button-->\n                    <button data-command=\"part\" class=\"leiden_plus\">&lt;D=.A.part...</button>\n                    <button data-command=\"recto\" class=\"leiden_plus\">&lt;D=.r...</button>\n                    <button data-command=\"verso\" class=\"leiden_plus\">&lt;D=.v...</button>\n                    <button data-command=\"erasure\" class=\"edcs\">\u301Aabc\u301B</button>\n                    <button data-command=\"gap\" class=\"edcs\">[...]</button>\n                    <button data-command=\"convert\" class=\"edcs\">Leiden+</button>\n                </div>\n            </jinn-codemirror>\n            <jinn-codemirror id=\"xml-editor\" mode=\"xml\" schema=\"${this.schema}\"\n                    namespace=\"http://www.tei-c.org/ns/1.0\">\n                <div slot=\"toolbar\">\n                    <button id=\"import\" title=\"Import from Leiden markup\">Import Leiden</button>\n                    <button data-command=\"selectElement\" title=\"Select element around current cursor position\">&lt;|></button>\n                    <button data-command=\"encloseWith\" title=\"Enclose selection in new element\">&lt;...&gt;</button>\n                    <button data-command=\"removeEnclosing\" title=\"Remove enclosing tags\">&lt;X></button>\n                </div>\n            </jinn-codemirror>\n        `;\n         \n        const xmlEditor:JinnCodemirror | null | undefined = this.shadowRoot?.querySelector('#xml-editor');\n        const leidenEditor:JinnCodemirror | null | undefined = this.shadowRoot?.querySelector('#leiden-editor');\n        const toggle:HTMLButtonElement | null | undefined = this.shadowRoot?.querySelector('#import');\n\n        if (!(xmlEditor && leidenEditor && toggle)) {\n            throw new Error('One or more components were not initialized')\n        }\n\n        toggle.addEventListener('click', () => {\n            const hidden = leidenEditor.classList.toggle('hidden');\n            if (!hidden) { \n                leidenEditor.focus();\n            }\n        });\n\n        leidenEditor.addEventListener('update', (ev) => {\n            ev.stopPropagation()\n            xmlEditor.content = ev.detail.content;\n        });\n\n        this.xmlEditor = xmlEditor\n\n        xmlEditor.addEventListener('update', (ev) => {\n            ev.stopPropagation()\n            if (!this._wrapper) {\n                console.log(\"no wrapper !!!\")\n                return null\n            }\n            // remove old children\n            const cl = this._wrapper?.children.length || 0\n            for (let i = 0; i < cl; i++) {\n                this._wrapper?.removeChild(this._wrapper.children[i])\n            }\n            if (!xmlEditor.value) {\n                // empty\n                console.log(\"xml editor value is empty\")\n            }\n            else  if (!(xmlEditor.value instanceof Element)) {\n                throw new Error(\"XML editor value is not a node\")\n            }\n            else {\n                console.log(\"appending\", xmlEditor.value)\n                this._wrapper?.appendChild(xmlEditor.value)\n            }\n            const content = this._wrapper\n\n            this.dispatchEvent(new CustomEvent('update', {\n                detail: { content },\n                composed: true,\n                bubbles: true\n            }))\n        })\n        xmlEditor.addEventListener('invalid', (ev) => {\n            ev.stopPropagation()\n            this.valid = false\n        });\n        xmlEditor.addEventListener('valid', (ev) => {\n            ev.stopPropagation()\n            this.valid = true\n        });\n    }\n}\n    \nif (!customElements.get('jinn-epidoc-editor')) {\n    window.customElements.define('jinn-epidoc-editor', JinnEpidocEditor);\n}\n"],
  "mappings": "MAMA,GAAM,GAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAqCP,eAA+B,YAAY,CAuC9C,aAAc,CACV,MAAM,EACN,KAAK,SAAW,KAChB,KAAK,UAAY,KACjB,KAAK,MAAQ,GACb,KAAK,OAAS,KACd,KAAK,aAAa,CAAE,KAAM,MAAO,CAAC,CACtC,IA/BI,OAAM,EAA4C,CAClD,GAAI,KAAK,WAAa,EAAO,CACzB,QAAQ,MAAM,iBAAiB,EAC/B,MACJ,CAIA,GAHK,GACD,MAAK,SAAW,MAEhB,CAAE,aAAiB,UACnB,KAAM,IAAI,OAAM,qBAAqB,EAGzC,KAAK,SAAW,EAChB,GAAM,GAAO,EAAM,kBACnB,GAAI,CAAC,KAAK,UACN,KAAM,IAAI,OAAM,4BAA4B,EAEhD,KAAK,UAAU,MAAQ,CAC3B,IAEI,QAAoC,CACpC,MAAO,MAAK,QAChB,CAUA,mBAAoB,CA1FxB,UA2FQ,KAAK,OAAS,KAAK,aAAa,QAAQ,EACxC,KAAK,WAAW,UAAY;AAAA;AAAA,kBAElB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAsBgD,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAW/D,GAAM,GAA8C,QAAK,aAAL,cAAiB,cAAc,eAC7E,EAAiD,QAAK,aAAL,cAAiB,cAAc,kBAChF,EAA8C,QAAK,aAAL,cAAiB,cAAc,WAEnF,GAAI,CAAE,IAAa,GAAgB,GAC/B,KAAM,IAAI,OAAM,6CAA6C,EAGjE,EAAO,iBAAiB,QAAS,IAAM,CAEnC,AAAK,AADU,EAAa,UAAU,OAAO,QAAQ,GAEjD,EAAa,MAAM,CAE3B,CAAC,EAED,EAAa,iBAAiB,SAAU,AAAC,GAAO,CAC5C,EAAG,gBAAgB,EACnB,EAAU,QAAU,EAAG,OAAO,OAClC,CAAC,EAED,KAAK,UAAY,EAEjB,EAAU,iBAAiB,SAAU,AAAC,GAAO,CArJrD,UAuJY,GADA,EAAG,gBAAgB,EACf,CAAC,KAAK,SACN,eAAQ,IAAI,gBAAgB,EACrB,KAGX,GAAM,GAAK,SAAK,WAAL,cAAe,SAAS,SAAU,EAC7C,OAAS,GAAI,EAAG,EAAI,EAAI,IACpB,QAAK,WAAL,QAAe,YAAY,KAAK,SAAS,SAAS,IAEtD,GAAI,CAAC,EAAU,MAEX,QAAQ,IAAI,2BAA2B,UAE/B,EAAU,gBAAiB,SAInC,QAAQ,IAAI,YAAa,EAAU,KAAK,EACxC,QAAK,WAAL,QAAe,YAAY,EAAU,WAJrC,MAAM,IAAI,OAAM,gCAAgC,EAMpD,GAAM,GAAU,KAAK,SAErB,KAAK,cAAc,GAAI,aAAY,SAAU,CACzC,OAAQ,CAAE,SAAQ,EAClB,SAAU,GACV,QAAS,EACb,CAAC,CAAC,CACN,CAAC,EACD,EAAU,iBAAiB,UAAW,AAAC,GAAO,CAC1C,EAAG,gBAAgB,EACnB,KAAK,MAAQ,EACjB,CAAC,EACD,EAAU,iBAAiB,QAAS,AAAC,GAAO,CACxC,EAAG,gBAAgB,EACnB,KAAK,MAAQ,EACjB,CAAC,CACL,CACJ,EAEA,AAAK,eAAe,IAAI,oBAAoB,GACxC,OAAO,eAAe,OAAO,qBAAsB,CAAgB",
  "names": []
}
