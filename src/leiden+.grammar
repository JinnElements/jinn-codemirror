@top Document {
    (
        block
    )+
}

block {
    Div { "<=" ( block )+ "=>" } |
    Recto { "<D=.r" ( block )+ "=D>" } |
    Verso { "<D=.v" ( block )+ "=D>" } |
    Part { "<D=." PartId ( block )+ "=D>"} |
    Fragment { "<D=." FragmentNum ( block )+ "=D>"} |
    inline
}

inline {
    LineBreakWrapped |
    LineBreak |
    Number |
    Abbrev | 
    Supplied | 
    lost |
    Text |
    Illegible |
    Unclear |
    LostLines |
    Erasure
}

Text {
    chars | "." | QuestionMark | space | "="
}

Abbrev {
    "(" inline+ ")"
}

Supplied {
    "<" inline* CertLow? ">"
}

lost {
    GapUnknown { "[.?]" } |
    Gap { "[." Number "]" } |
    SuppliedLost { "[" inline+ CertLow? "]" }
}

Erasure {
    "〚" inline+ "〛"
}

@tokens {
    chars { ![() <>?=.0-9\[\]〚〛]+ }

    Unclear { (![\u0323] '\u0323')+ }

    space { " " }

    CertLow { "(?)" }

    QuestionMark { "?" }

    Number { std.digit+ }

    FragmentNum {
        Number ".fragment"
    }

    PartId {
        ( $[a-zA-Z] | std.digit )+ ".part"
    }

    LineBreak {
        Number "." space?
    }

    LineBreakWrapped {
        Number ".-" space?
    }

    Illegible {
        "." ( Number | QuestionMark ) "lin"?
    }

    LostLines {
        "lost." ( Number | QuestionMark ) "lin"
    }

    @precedence { LostLines, Illegible, ".", FragmentNum, LineBreakWrapped, LineBreak, Unclear, Number, chars }

}

// @external tokens eofToken from "./tokens" { eof }
// @external tokens sofToken from "./tokens" { sof }